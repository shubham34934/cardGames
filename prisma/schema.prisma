datasource db {
  provider = "mongodb"
  url      = "mongodb+srv://Shubhamshudhanshu:gatlu983509@cardgame.yictkqk.mongodb.net/cardGame"
}

generator client {
  provider = "prisma-client-js"
}

enum Status {
  IN_PROGRESS
  COMPLETED
}

enum CardColor {
  SPADES
  HEARTS
  DIAMONDS
  CLUBS
}

enum CardValue {
  ACE
  TWO
  THREE
  FOUR
  FIVE
  SIX
  SEVEN
  EIGHT
  NINE
  TEN
  JACK
  QUEEN
  KING
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  name      String?
  player    Player[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Player {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId

  playedTurnIds String[] @db.ObjectId
  playedTurns   Turn[]   @relation("PlayedTurns", fields: [playedTurnIds], references: [id])

  playedGameIds String[] @db.ObjectId
  playedGames   Game[]   @relation("PlayedGames", fields: [playedGameIds], references: [id])

  teammateTurns   Turn[]   @relation("TeammateTurns", fields: [teammateTurnIds], references: [id])
  teammateTurnIds String[] @db.ObjectId

  highestBidderTurns Turn[] @relation("HighestBidderTurns")
}

model Game {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  status    Status?  @default(IN_PROGRESS) // Set the default value to IN_PROGRESS
  turns     Turn[]   @relation("GameTurns")
  players   Player[] @relation("PlayedGames", fields: [playerIds], references: [id])
  playerIds String[] @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Turn {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  status          Status
  highestBidder   Player @relation("HighestBidderTurns", fields: [highestBidderId], references: [id])
  highestBidderId String @db.ObjectId

  teammates   Player[] @relation("TeammateTurns", fields: [teammateIds], references: [id])
  teammateIds String[] @db.ObjectId

  players   Player[] @relation("PlayedTurns", fields: [playerIds], references: [id])
  playerIds String[] @db.ObjectId

  firstAsk   String?
  secondAsk  String?
  trump      CardColor?
  finalScore Int?
  bidAmount  Int?

  game      Game     @relation("GameTurns", fields: [gameId], references: [id])
  gameId    String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
